<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.mapper.TeamMapper">
  <resultMap id="BaseResultMap" type="com.demo.entity.Team">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code"/>
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId"/>
    <association property="teacher" javaType="com.demo.entity.Teacher">
      <id column="t_id" jdbcType="INTEGER" property="id"/>
      <result column="t_code" jdbcType="VARCHAR" property="code"/>
      <result column="t_name" jdbcType="VARCHAR" property="name"/>
      <result column="t_account_id" jdbcType="INTEGER" property="accountId"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, code, name, teacher_id
  </sql>
  <!--根据团队id查询-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select team.*,
    t.id 't_id',t.code 't_code',t.name 't_name',t.account_id 't_account_id'
    from team
    left join teacher t on t.id=team.teacher_id
    where team.id = #{id,jdbcType=INTEGER}
  </select>
  <!--查询所有团队-->
  <select id="selectAllTeam" resultMap="BaseResultMap">
    select team.*,
    t.id 't_id',t.code 't_code',t.name 't_name',t.account_id 't_account_id'
    from team
    left join teacher t on t.id=team.teacher_id
  </select>
  <!--根据教师id获取团队-->
  <select id="selectTeamListByTid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select team.*,
    t.id 't_id',t.code 't_code',t.name 't_name',t.account_id 't_account_id'
    from team
    left join teacher t on t.id=team.teacher_id
    where team.teacher_id=#{tid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from team
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.demo.entity.Team">
    insert into team (id, code, name, 
      teacher_id)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{teacherId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.entity.Team">
    insert into team
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.entity.Team">
    update team
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.entity.Team">
    update team
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>